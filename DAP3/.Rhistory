ggtitle('combined.sulfur.dioxide') +
geom_boxplot(aes(group = quality), alpha = 0.5)
plot3 <- ggplot(aes(x = quality, y = total.sulfur.dioxide), data = pf) +
geom_jitter(alpha = 0.1, size = 0.1) +
ggtitle('total.sulfur.dioxide') +
geom_boxplot(aes(group = quality), alpha = 0.5)
grid.arrange(plot1, plot2, plot3, ncol = 3)
cor.test(pf$free.sulfur.dioxide, pf$quality, method = 'pearson')
cor.test(pf$total.sulfur.dioxide, pf$quality, method = 'pearson')
library(reshape2)
ggplot(aes(x = volatile.acidity, y = citric.acid), data = pf) +
geom_point(aes(color = quality), alpha = 0.5, size = 0.2) +
scale_x_continuous(breaks = seq(0, 1.6, 0.1)) +
facet_wrap(~quality, ncol = 2)
ggplot(aes(x = alcohol, y = density), data = pf) +
geom_point(aes(color = quality), alpha = 0.3, size = 0.2) +
facet_wrap(~quality, ncol = 2)
# install.packages('RColorBrewer')
library(RColorBrewer)
ggplot(aes(x = alcohol, y = density, color = factor(quality)), data = pf) +
geom_point(alpha = 0.3, size = 1, position = 'jitter') +
scale_color_brewer(type = 'div',
guide = guide_legend(title = 'quality',
reverse = T,
override.aes = list(alpha = 1, size = 2))) +
geom_smooth(method = 'lm', se = FALSE, size = 0.5) +
ggtitle('alcohol-density VS quality')
ggplot(aes(x = citric.acid, y = log10(fixed.acidity)), data = pf) +
geom_point(aes(color = quality), alpha = 0.3, size = 0.2) +
facet_wrap(~quality, ncol = 2)
ggplot(aes(x = citric.acid, y = fixed.acidity), data = pf) +
geom_point(aes(color = quality), alpha = 0.3, size = 0.2) +
facet_wrap(~quality, ncol = 2)
m1 <- lm(I(alcohol) ~ I(volatile.acidity), data = pf)
m2 <- update(m1, ~ . + citric.acid)
m3 <- update(m2, ~ . + total.sulfur.dioxide)
m4 <- update(m3, ~ . + fixed.acidity)
m5 <- update(m4, ~ . + chlorides)
mtable(m1, m2, m3, m4, m5)
ggplot(aes(x = quality, y = citric.acid), data = pf) +
geom_jitter(alpha = 0.2, color = 'orange', size = 0.5) +
geom_boxplot(aes(group = quality), alpha = 0.5) +
geom_line(stat = 'summary', fun.y = mean) +
labs(x = 'quality (score between 0 and 10)',
y = 'citric.acid (g / dm^3)',
title = 'Relationship of citric.acid VS quality')
ggplot(aes(x = quality, y = volatile.acidity), data = pf) +
geom_jitter(alpha = 0.2, color = 'orange', size = 0.5) +
geom_boxplot(aes(group = quality), alpha = 0.5) +
geom_line(stat = 'summary', fun.y = mean) +
labs(x = 'quality (score between 0 and 10)',
y = 'volatile.acidity (acetic acid - g / dm^3)',
title = 'Relationship of volatile.acidity VS quality')
ggplot(aes(x = alcohol, y = density, color = factor(quality)), data = pf) +
geom_point(alpha = 0.3, size = 1, position = 'jitter') +
scale_color_brewer(type = 'div',
guide = guide_legend(title = 'quality',
reverse = T,
override.aes = list(alpha = 1, size = 2))) +
geom_smooth(method = 'lm', se = FALSE, size = 0.5) +
ggtitle('alcohol-density VS quality') +
labs(x = 'alcohol(% by volume)',
y = 'density(g / cm^3)',
title = 'Relationship of alcohol & density VS quality')
# 加载你最终使用的所有组件
# 在这个代码块的分析中。
# 注意，在这个代码块中，将参数 "echo" 设为假。
# This prevents the code from displaying in the knitted HTML output.这可以避免代码混入 HTML 输出显示。
# 应当在文件中，对所有代码块设为 echo=FALSE 。
# 安装相应包，方便绘图
# install.packages('ggplot2')
# install.packages('GGally')
# install.packages('scales')
# install.packages('memisc')
# install.packages('lattice')
# install.packages('MASS')
# install.packages('car')
# install.packages('reshape')
# install.packages('plyr')
# ggplot2 函数包
# GGally 以成对的形式绘制每个变量之间的关系图
# scales 标度
# memisc 汇总递归
# lattice 其他
# MASS 用于函数
# car 重写变量代码
# reshape 改造和整理数据
# plyr 创造汇总和传输
library(ggplot2)
library(GGally)
library(scales)
library(lattice)
library(MASS)
library(memisc)
# 加载数据
pf <- read.csv('wineQualityReds.csv')
# 查看各列名称
names(pf)
# 查看摘要信息
summary(pf)
qplot(x = fixed.acidity, data = pf, binwidth = 0.1) +
scale_x_continuous(limits = c(4,14), breaks = seq(4,14,0.5))
qplot(x = volatile.acidity, data = pf, binwidth = 0.01) +
scale_x_continuous(limits = c(0.1,1),breaks = seq(0.1,1,0.1))
qplot(x = citric.acid, data = pf, binwidth = 0.01) +
scale_x_continuous(limits = c(0,0.8),breaks = seq(0,0.8,0.1))
qplot(x = residual.sugar, data = pf, binwidth = 0.1) +
scale_x_continuous(limits = c(1,7),breaks = seq(1,7,0.5))
qplot(x = chlorides, data = pf, binwidth = 0.01) +
scale_x_continuous(limits = c(0,0.2),breaks = seq(0,0.2,0.02))
qplot(x = free.sulfur.dioxide, data = pf, binwidth = 1)+
scale_x_continuous(limits = c(0,45),breaks = seq(0,45,2))
qplot(x = total.sulfur.dioxide, data = pf, binwidth = 1)+
scale_x_continuous(limits = c(0,150),breaks = seq(0,150,5))
qplot(x = total.sulfur.dioxide, data = pf, binwidth = 1)+
scale_x_continuous(limits = c(25,35),breaks = seq(25,35,2))
combined.sulfur.dioxide <- pf$total.sulfur.dioxide - pf$free.sulfur.dioxide
qplot(x = combined.sulfur.dioxide, data = pf, binwidth = 1) +
scale_x_continuous(limits = c(0,130),breaks = seq(0,130,5))
qplot(x = density, data = pf, binwidth = 0.0001)+
scale_x_continuous(limits = c(0.9901,1.0037),breaks = seq(0.9901,1.0037,0.002))
qplot(x = pH, data = pf, binwidth = 0.01)+
scale_x_continuous(limits = c(2.740,4.010),breaks = seq(2.740,4.010,0.1))
qplot(x = sulphates, data = pf, binwidth = 0.01)+
scale_x_continuous(limits = c(0.33,2),breaks = seq(0.33,2,0.2))
qplot(x = sulphates, data = pf, binwidth = 0.01)+
scale_x_continuous(limits = c(0.43,0.73),breaks = seq(0.43,0.73,0.1))
qplot(x = alcohol, data = pf, binwidth = 0.1)+
scale_x_continuous(limits = c(8.4,14.9),breaks = seq(8.4,14.9,0.4))
qplot(x = quality, data = pf, binwidth = 1) +
geom_bar() +
labs(title = 'Wine Quality Distribution') +
scale_x_continuous(breaks = seq(3,8,1))
ggplot(aes(x = quality, y = fixed.acidity), data = pf) +
geom_jitter(alpha = 0.2, color = 'orange', size = 0.5) +
geom_boxplot(aes(group = quality), alpha = 0.5)
cor.test(pf$fixed.acidity,pf$quality, method = 'pearson')
ggplot(aes(x = quality, y = volatile.acidity), data = pf) +
scale_x_continuous(breaks = seq(0, 1.6, 0.1)) +
geom_jitter(alpha = 0.2, color = 'orange', size = 0.5) +
geom_boxplot(aes(group = quality), alpha = 0.5)
cor.test(pf$volatile.acidity,pf$quality, method = 'pearson')
ggplot(aes(x = quality, y = volatile.acidity), data = pf) +
geom_jitter(alpha = 0.2, color = 'orange', size = 0.5) +
geom_boxplot(aes(group = quality), alpha = 0.5) +
geom_line(stat = 'summary', fun.y = mean) +
ggtitle('volatile.acidity VS quality')
ggplot(aes(x = quality, y = citric.acid), data = pf) +
geom_jitter(alpha = 0.2, color = 'orange', size = 0.5) +
geom_boxplot(aes(group = quality), alpha = 0.5)
cor.test(pf$citric.acid,pf$quality, method = 'pearson')
ggplot(aes(x = quality, y = citric.acid), data = pf) +
geom_jitter(alpha = 0.2, color = 'orange', size = 0.5) +
geom_boxplot(aes(group = quality), alpha = 0.5) +
geom_line(stat = 'summary', fun.y = mean) +
ggtitle('citric.acid VS quality')
ggplot(aes(x = quality, y = residual.sugar), data = pf) +
geom_jitter(alpha = 0.2, color = 'orange', size = 0.5) +
geom_boxplot(aes(group = quality), alpha = 0.5)
cor.test(pf$residual.sugar, pf$quality, method = 'pearson')
ggplot(aes(x = quality, y = chlorides), data = pf) +
geom_jitter(alpha = 0.1, color = 'blue', size = 0.4) +
geom_boxplot(aes(group = quality), alpha = 0.5) +
scale_y_continuous(limits = c(0, 0.2))
cor.test(pf$chlorides, pf$quality, method = 'pearson')
ggplot(aes(x = quality, y = alcohol), data = pf) +
geom_jitter(alpha = 0.1, color = 'blue', size = 0.4) +
geom_boxplot(aes(group = quality), alpha = 0.5)
cor.test(pf$alcohol, pf$quality, method = 'pearson')
ggplot(aes(x = quality, y = density), data = pf) +
geom_jitter(alpha = 0.1, color = 'blue', size = 0.4) +
geom_boxplot(aes(group = quality), alpha = 0.5)
cor.test(pf$density, pf$quality, method = 'pearson')
ggplot(aes(x = alcohol, y = density), data = pf) +
geom_point(alpha = 0.1) +
stat_smooth(method = 'lm') +
scale_x_continuous(lim = c(8.4, quantile(pf$alcohol, 0.99))) +
scale_y_continuous(lim = c(0.9901, quantile(pf$density, 0.99)))
cor.test(pf$alcohol, pf$density, method = 'pearson')
ggplot(aes(x = quality, y = pH), data = pf) +
geom_jitter(alpha = 0.1, color = 'blue', size = 0.4) +
geom_boxplot(aes(group = quality), alpha = 0.5)
qplot(x = pH, data = pf, binwidth = 0.01)+
scale_x_continuous(limits = c(2.740,4.010),breaks = seq(2.740,4.010,0.2)) +
facet_wrap(~quality, ncol = 3)
cor.test(pf$pH, pf$quality, method = 'pearson')
library(gridExtra)
plot1 <- ggplot(aes(x = fixed.acidity, y = pH), data = pf) +
geom_point(alpha = 0.1, size = 0.2) +
ggtitle('fixed.acidity') +
stat_smooth(method = 'lm')
plot2 <- ggplot(aes(x = volatile.acidity, y = pH), data = pf) +
geom_point(alpha = 0.1, size = 0.2) +
ggtitle('volatile.acidity') +
stat_smooth(method = 'lm')
plot3 <- ggplot(aes(x = citric.acid, y = pH), data = pf) +
geom_point(alpha = 0.1, size = 0.2) +
ggtitle('citric.acid') +
stat_smooth(method = 'lm')
plot4 <- ggplot(aes(x = residual.sugar, y = pH), data = pf) +
geom_point(alpha = 0.1, size = 0.2) +
ggtitle('residual.sugar') +
stat_smooth(method = 'lm')
plot5 <- ggplot(aes(x = chlorides, y = pH), data = pf) +
geom_point(alpha = 0.1, size = 0.2) +
ggtitle('chlorides') +
stat_smooth(method = 'lm')
plot6 <- ggplot(aes(x = sulphates, y = pH), data = pf) +
geom_point(alpha = 0.1, size = 0.2) +
ggtitle('sulphates') +
stat_smooth(method = 'lm')
grid.arrange(plot1, plot2, plot3, plot4, plot5, plot6, ncol = 3)
cor.test(pf$fixed.acidity, pf$pH, method = 'pearson')
cor.test(pf$citric.acid, pf$pH, method = 'pearson')
plot1 <- ggplot(aes(x = quality, y = free.sulfur.dioxide), data = pf) +
geom_jitter(alpha = 0.1, size = 0.1) +
ggtitle('free.sulfur.dioxide') +
geom_boxplot(aes(group = quality), alpha = 0.5)
plot2 <- ggplot(aes(x = quality, y = combined.sulfur.dioxide), data = pf) +
geom_jitter(alpha = 0.1, size = 0.1) +
ggtitle('combined.sulfur.dioxide') +
geom_boxplot(aes(group = quality), alpha = 0.5)
plot3 <- ggplot(aes(x = quality, y = total.sulfur.dioxide), data = pf) +
geom_jitter(alpha = 0.1, size = 0.1) +
ggtitle('total.sulfur.dioxide') +
geom_boxplot(aes(group = quality), alpha = 0.5)
grid.arrange(plot1, plot2, plot3, ncol = 3)
cor.test(pf$free.sulfur.dioxide, pf$quality, method = 'pearson')
cor.test(pf$total.sulfur.dioxide, pf$quality, method = 'pearson')
library(reshape2)
ggplot(aes(x = volatile.acidity, y = citric.acid), data = pf) +
geom_point(aes(color = quality), alpha = 0.5, size = 0.2) +
scale_x_continuous(breaks = seq(0, 1.6, 0.1)) +
facet_wrap(~quality, ncol = 2)
ggplot(aes(x = alcohol, y = density), data = pf) +
geom_point(aes(color = quality), alpha = 0.3, size = 0.2) +
facet_wrap(~quality, ncol = 2)
# install.packages('RColorBrewer')
library(RColorBrewer)
ggplot(aes(x = alcohol, y = density, color = factor(quality)), data = pf) +
geom_point(alpha = 0.3, size = 1, position = 'jitter') +
scale_color_brewer(type = 'div',
guide = guide_legend(title = 'quality',
reverse = T,
override.aes = list(alpha = 1, size = 2))) +
geom_smooth(method = 'lm', se = FALSE, size = 0.5) +
ggtitle('alcohol-density VS quality')
ggplot(aes(x = citric.acid, y = log10(fixed.acidity)), data = pf) +
geom_point(aes(color = quality), alpha = 0.3, size = 0.2) +
facet_wrap(~quality, ncol = 2)
ggplot(aes(x = citric.acid, y = fixed.acidity), data = pf) +
geom_point(aes(color = quality), alpha = 0.3, size = 0.2) +
facet_wrap(~quality, ncol = 2)
m1 <- lm(I(alcohol) ~ I(volatile.acidity), data = pf)
m2 <- update(m1, ~ . + citric.acid)
m3 <- update(m2, ~ . + total.sulfur.dioxide)
m4 <- update(m3, ~ . + fixed.acidity)
m5 <- update(m4, ~ . + chlorides)
mtable(m1, m2, m3, m4, m5)
ggplot(aes(x = quality, y = citric.acid), data = pf) +
geom_jitter(alpha = 0.2, color = 'orange', size = 0.5) +
geom_boxplot(aes(group = quality), alpha = 0.5) +
geom_line(stat = 'summary', fun.y = mean) +
labs(x = 'quality (score between 0 and 10)',
y = 'citric.acid (g / dm^3)',
title = 'Relationship of citric.acid VS quality')
ggplot(aes(x = quality, y = volatile.acidity), data = pf) +
geom_jitter(alpha = 0.2, color = 'orange', size = 0.5) +
geom_boxplot(aes(group = quality), alpha = 0.5) +
geom_line(stat = 'summary', fun.y = mean) +
labs(x = 'quality (score between 0 and 10)',
y = 'volatile.acidity (acetic acid - g / dm^3)',
title = 'Relationship of volatile.acidity VS quality')
ggplot(aes(x = alcohol, y = density, color = factor(quality)), data = pf) +
geom_point(alpha = 0.3, size = 1, position = 'jitter') +
scale_color_brewer(type = 'div',
guide = guide_legend(title = 'quality',
reverse = T,
override.aes = list(alpha = 1, size = 2))) +
geom_smooth(method = 'lm', se = FALSE, size = 0.5) +
ggtitle('alcohol-density VS quality') +
labs(x = 'alcohol(% by volume)',
y = 'density(g / cm^3)',
title = 'Relationship of alcohol & density VS quality')
# 对quality应用 factor() 函数，将其转为factor因子（或成为类别变量），方便用颜色编码
pf$quality <- factor(pf$quality)
ggplot(aes(x = volatile.acidity, y = citric.acid), data = pf) +
geom_point(aes(color = quality), alpha = 0.5, size = 0.2) +
scale_x_continuous(breaks = seq(0, 1.6, 0.1)) +
facet_wrap(~quality, ncol = 2)
# 加载你最终使用的所有组件
# 在这个代码块的分析中。
# 注意，在这个代码块中，将参数 "echo" 设为假。
# This prevents the code from displaying in the knitted HTML output.这可以避免代码混入 HTML 输出显示。
# 应当在文件中，对所有代码块设为 echo=FALSE 。
# 安装相应包，方便绘图
# install.packages('ggplot2')
# install.packages('GGally')
# install.packages('scales')
# install.packages('memisc')
# install.packages('lattice')
# install.packages('MASS')
# install.packages('car')
# install.packages('reshape')
# install.packages('plyr')
# ggplot2 函数包
# GGally 以成对的形式绘制每个变量之间的关系图
# scales 标度
# memisc 汇总递归
# lattice 其他
# MASS 用于函数
# car 重写变量代码
# reshape 改造和整理数据
# plyr 创造汇总和传输
library(ggplot2)
library(GGally)
library(scales)
library(lattice)
library(MASS)
library(memisc)
# 加载数据
pf <- read.csv('wineQualityReds.csv')
# 查看各列名称
names(pf)
# 查看摘要信息
summary(pf)
qplot(x = fixed.acidity, data = pf, binwidth = 0.1) +
scale_x_continuous(limits = c(4,14), breaks = seq(4,14,0.5))
qplot(x = volatile.acidity, data = pf, binwidth = 0.01) +
scale_x_continuous(limits = c(0.1,1),breaks = seq(0.1,1,0.1))
qplot(x = citric.acid, data = pf, binwidth = 0.01) +
scale_x_continuous(limits = c(0,0.8),breaks = seq(0,0.8,0.1))
qplot(x = residual.sugar, data = pf, binwidth = 0.1) +
scale_x_continuous(limits = c(1,7),breaks = seq(1,7,0.5))
qplot(x = chlorides, data = pf, binwidth = 0.01) +
scale_x_continuous(limits = c(0,0.2),breaks = seq(0,0.2,0.02))
qplot(x = free.sulfur.dioxide, data = pf, binwidth = 1)+
scale_x_continuous(limits = c(0,45),breaks = seq(0,45,2))
qplot(x = total.sulfur.dioxide, data = pf, binwidth = 1)+
scale_x_continuous(limits = c(0,150),breaks = seq(0,150,5))
qplot(x = total.sulfur.dioxide, data = pf, binwidth = 1)+
scale_x_continuous(limits = c(25,35),breaks = seq(25,35,2))
combined.sulfur.dioxide <- pf$total.sulfur.dioxide - pf$free.sulfur.dioxide
qplot(x = combined.sulfur.dioxide, data = pf, binwidth = 1) +
scale_x_continuous(limits = c(0,130),breaks = seq(0,130,5))
qplot(x = density, data = pf, binwidth = 0.0001)+
scale_x_continuous(limits = c(0.9901,1.0037),breaks = seq(0.9901,1.0037,0.002))
qplot(x = pH, data = pf, binwidth = 0.01)+
scale_x_continuous(limits = c(2.740,4.010),breaks = seq(2.740,4.010,0.1))
qplot(x = sulphates, data = pf, binwidth = 0.01)+
scale_x_continuous(limits = c(0.33,2),breaks = seq(0.33,2,0.2))
qplot(x = sulphates, data = pf, binwidth = 0.01)+
scale_x_continuous(limits = c(0.43,0.73),breaks = seq(0.43,0.73,0.1))
qplot(x = alcohol, data = pf, binwidth = 0.1)+
scale_x_continuous(limits = c(8.4,14.9),breaks = seq(8.4,14.9,0.4))
qplot(x = quality, data = pf, binwidth = 1) +
geom_bar() +
labs(title = 'Wine Quality Distribution') +
scale_x_continuous(breaks = seq(3,8,1))
ggplot(aes(x = quality, y = fixed.acidity), data = pf) +
geom_jitter(alpha = 0.2, color = 'orange', size = 0.5) +
geom_boxplot(aes(group = quality), alpha = 0.5)
cor.test(pf$fixed.acidity,pf$quality, method = 'pearson')
ggplot(aes(x = quality, y = volatile.acidity), data = pf) +
scale_x_continuous(breaks = seq(0, 1.6, 0.1)) +
geom_jitter(alpha = 0.2, color = 'orange', size = 0.5) +
geom_boxplot(aes(group = quality), alpha = 0.5)
cor.test(pf$volatile.acidity,pf$quality, method = 'pearson')
ggplot(aes(x = quality, y = volatile.acidity), data = pf) +
geom_jitter(alpha = 0.2, color = 'orange', size = 0.5) +
geom_boxplot(aes(group = quality), alpha = 0.5) +
geom_line(stat = 'summary', fun.y = mean) +
ggtitle('volatile.acidity VS quality')
ggplot(aes(x = quality, y = citric.acid), data = pf) +
geom_jitter(alpha = 0.2, color = 'orange', size = 0.5) +
geom_boxplot(aes(group = quality), alpha = 0.5)
cor.test(pf$citric.acid,pf$quality, method = 'pearson')
ggplot(aes(x = quality, y = citric.acid), data = pf) +
geom_jitter(alpha = 0.2, color = 'orange', size = 0.5) +
geom_boxplot(aes(group = quality), alpha = 0.5) +
geom_line(stat = 'summary', fun.y = mean) +
ggtitle('citric.acid VS quality')
ggplot(aes(x = quality, y = residual.sugar), data = pf) +
geom_jitter(alpha = 0.2, color = 'orange', size = 0.5) +
geom_boxplot(aes(group = quality), alpha = 0.5)
cor.test(pf$residual.sugar, pf$quality, method = 'pearson')
ggplot(aes(x = quality, y = chlorides), data = pf) +
geom_jitter(alpha = 0.1, color = 'blue', size = 0.4) +
geom_boxplot(aes(group = quality), alpha = 0.5) +
scale_y_continuous(limits = c(0, 0.2))
cor.test(pf$chlorides, pf$quality, method = 'pearson')
ggplot(aes(x = quality, y = alcohol), data = pf) +
geom_jitter(alpha = 0.1, color = 'blue', size = 0.4) +
geom_boxplot(aes(group = quality), alpha = 0.5)
cor.test(pf$alcohol, pf$quality, method = 'pearson')
ggplot(aes(x = quality, y = density), data = pf) +
geom_jitter(alpha = 0.1, color = 'blue', size = 0.4) +
geom_boxplot(aes(group = quality), alpha = 0.5)
cor.test(pf$density, pf$quality, method = 'pearson')
ggplot(aes(x = alcohol, y = density), data = pf) +
geom_point(alpha = 0.1) +
stat_smooth(method = 'lm') +
scale_x_continuous(lim = c(8.4, quantile(pf$alcohol, 0.99))) +
scale_y_continuous(lim = c(0.9901, quantile(pf$density, 0.99)))
cor.test(pf$alcohol, pf$density, method = 'pearson')
ggplot(aes(x = quality, y = pH), data = pf) +
geom_jitter(alpha = 0.1, color = 'blue', size = 0.4) +
geom_boxplot(aes(group = quality), alpha = 0.5)
qplot(x = pH, data = pf, binwidth = 0.01)+
scale_x_continuous(limits = c(2.740,4.010),breaks = seq(2.740,4.010,0.2)) +
facet_wrap(~quality, ncol = 3)
cor.test(pf$pH, pf$quality, method = 'pearson')
library(gridExtra)
plot1 <- ggplot(aes(x = fixed.acidity, y = pH), data = pf) +
geom_point(alpha = 0.1, size = 0.2) +
ggtitle('fixed.acidity') +
stat_smooth(method = 'lm')
plot2 <- ggplot(aes(x = volatile.acidity, y = pH), data = pf) +
geom_point(alpha = 0.1, size = 0.2) +
ggtitle('volatile.acidity') +
stat_smooth(method = 'lm')
plot3 <- ggplot(aes(x = citric.acid, y = pH), data = pf) +
geom_point(alpha = 0.1, size = 0.2) +
ggtitle('citric.acid') +
stat_smooth(method = 'lm')
plot4 <- ggplot(aes(x = residual.sugar, y = pH), data = pf) +
geom_point(alpha = 0.1, size = 0.2) +
ggtitle('residual.sugar') +
stat_smooth(method = 'lm')
plot5 <- ggplot(aes(x = chlorides, y = pH), data = pf) +
geom_point(alpha = 0.1, size = 0.2) +
ggtitle('chlorides') +
stat_smooth(method = 'lm')
plot6 <- ggplot(aes(x = sulphates, y = pH), data = pf) +
geom_point(alpha = 0.1, size = 0.2) +
ggtitle('sulphates') +
stat_smooth(method = 'lm')
grid.arrange(plot1, plot2, plot3, plot4, plot5, plot6, ncol = 3)
cor.test(pf$fixed.acidity, pf$pH, method = 'pearson')
cor.test(pf$citric.acid, pf$pH, method = 'pearson')
plot1 <- ggplot(aes(x = quality, y = free.sulfur.dioxide), data = pf) +
geom_jitter(alpha = 0.1, size = 0.1) +
ggtitle('free.sulfur.dioxide') +
geom_boxplot(aes(group = quality), alpha = 0.5)
plot2 <- ggplot(aes(x = quality, y = combined.sulfur.dioxide), data = pf) +
geom_jitter(alpha = 0.1, size = 0.1) +
ggtitle('combined.sulfur.dioxide') +
geom_boxplot(aes(group = quality), alpha = 0.5)
plot3 <- ggplot(aes(x = quality, y = total.sulfur.dioxide), data = pf) +
geom_jitter(alpha = 0.1, size = 0.1) +
ggtitle('total.sulfur.dioxide') +
geom_boxplot(aes(group = quality), alpha = 0.5)
grid.arrange(plot1, plot2, plot3, ncol = 3)
cor.test(pf$free.sulfur.dioxide, pf$quality, method = 'pearson')
cor.test(pf$total.sulfur.dioxide, pf$quality, method = 'pearson')
library(reshape2)
# 对quality应用 factor() 函数，将其转为factor因子（或成为类别变量），方便用颜色编码
pf$quality <- factor(pf$quality)
ggplot(aes(x = volatile.acidity, y = citric.acid), data = pf) +
geom_point(aes(color = quality), alpha = 0.5, size = 0.2) +
scale_x_continuous(breaks = seq(0, 1.6, 0.1)) +
facet_wrap(~quality, ncol = 2)
ggplot(aes(x = alcohol, y = density), data = pf) +
geom_point(aes(color = quality), alpha = 0.3, size = 0.2) +
facet_wrap(~quality, ncol = 2)
# install.packages('RColorBrewer')
library(RColorBrewer)
ggplot(aes(x = alcohol, y = density, color = quality), data = pf) +
geom_point(alpha = 0.3, size = 1, position = 'jitter') +
scale_color_brewer(type = 'div',
guide = guide_legend(title = 'quality',
reverse = T,
override.aes = list(alpha = 1, size = 2))) +
geom_smooth(method = 'lm', se = FALSE, size = 0.5) +
ggtitle('alcohol-density VS quality')
ggplot(aes(x = citric.acid, y = log10(fixed.acidity)), data = pf) +
geom_point(aes(color = quality), alpha = 0.3, size = 0.2) +
facet_wrap(~quality, ncol = 2)
ggplot(aes(x = citric.acid, y = fixed.acidity), data = pf) +
geom_point(aes(color = quality), alpha = 0.3, size = 0.2) +
facet_wrap(~quality, ncol = 2)
m1 <- lm(I(alcohol) ~ I(volatile.acidity), data = pf)
m2 <- update(m1, ~ . + citric.acid)
m3 <- update(m2, ~ . + total.sulfur.dioxide)
m4 <- update(m3, ~ . + fixed.acidity)
m5 <- update(m4, ~ . + chlorides)
mtable(m1, m2, m3, m4, m5)
ggplot(aes(x = quality, y = citric.acid), data = pf) +
geom_jitter(alpha = 0.2, color = 'orange', size = 0.5) +
geom_boxplot(aes(group = quality), alpha = 0.5) +
geom_line(stat = 'summary', fun.y = mean) +
labs(x = 'quality (score between 0 and 10)',
y = 'citric.acid (g / dm^3)',
title = 'Relationship of citric.acid VS quality')
ggplot(aes(x = quality, y = volatile.acidity), data = pf) +
geom_jitter(alpha = 0.2, color = 'orange', size = 0.5) +
geom_boxplot(aes(group = quality), alpha = 0.5) +
geom_line(stat = 'summary', fun.y = mean) +
labs(x = 'quality (score between 0 and 10)',
y = 'volatile.acidity (acetic acid - g / dm^3)',
title = 'Relationship of volatile.acidity VS quality')
ggplot(aes(x = alcohol, y = density, color = quality), data = pf) +
geom_point(alpha = 0.3, size = 1, position = 'jitter') +
scale_color_brewer(type = 'div',
guide = guide_legend(title = 'quality',
reverse = T,
override.aes = list(alpha = 1, size = 2))) +
geom_smooth(method = 'lm', se = FALSE, size = 0.5) +
ggtitle('alcohol-density VS quality') +
labs(x = 'alcohol(% by volume)',
y = 'density(g / cm^3)',
title = 'Relationship of alcohol & density VS quality')
